<template>
  <div class="login" :style="'background-image:url(' + Background + ');'">
    <div class="title">广州建通测绘通用种植溯源管理云平台</div>
    <el-form ref="loginForm" :model="loginForm" :rules="loginRules" class="login-form">
      <el-form-item prop="username">
        <el-input v-model="loginForm.username" type="text" auto-complete="off" placeholder="账号">
          <icon-svg slot="prefix" name="user" class="input-icon" />
        </el-input>
      </el-form-item>
      <el-form-item prop="password">
        <el-input v-model="loginForm.password" type="password" auto-complete="off" placeholder="请输入登录密码" @keyup.enter.native="handleLogin">
          <icon-svg slot="prefix" name="password" class="input-icon" />
        </el-input>
      </el-form-item>
      <el-form-item prop="code">
        <el-input v-model="loginForm.code" auto-complete="off" placeholder="请输入验证码" style="width: 63%" @keyup.enter.native="handleLogin">
          <icon-svg slot="prefix" name="validCode" class="input-icon" />
        </el-input>
        <div class="login-code">
          <img :src="codeUrl" @click="getCode">
        </div>
      </el-form-item>
      <el-checkbox v-model="loginForm.rememberMe" style="margin: 0 0 40px 0">
        记住我
      </el-checkbox>
      <el-form-item style="width: 100%">
        <el-button class="login-btn" :loading="loading" size="medium" type="add" style="width: 100%" @click.native.prevent="handleLogin">
          <span v-if="!loading">登 录</span>
          <span v-else>登 录 中...</span>
        </el-button>
      </el-form-item>
    </el-form>
    <!--  底部  -->
    <div class="el-login-footer">
      <span>广州建通测绘地理信息技术股份有限公司</span>
    </div>
  </div>
</template>

<script>
import { encrypt } from '@/utils/rsaEncrypt'
import Config from '@/setting'
import { getCodeImg } from '@/api/login'
import Cookies from 'js-cookie'
import qs from 'qs'
import Background from '@/assets/images/background.png'
export default {
  name: 'Login',
  data() {
    return {
      Background: Background,
      codeUrl: '',
      cookiePass: '',
      loginForm: {
        username: 'user',
        password: '123456',
        rememberMe: false,
        code: '',
        uuid: ''
      },
      loginRules: {
        username: [
          { required: true, trigger: 'blur', message: '用户名不能为空' }
        ],
        password: [
          { required: true, trigger: 'blur', message: '密码不能为空' }
        ],
        code: [
          { required: true, trigger: 'change', message: '验证码不能为空' }
        ]
      },
      loading: false,
      redirect: undefined
    }
  },
  watch: {
    $route: {
      handler: function(route) {
        const data = route.query
        if (data && data.redirect) {
          this.redirect = data.redirect
          delete data.redirect
          if (JSON.stringify(data) !== '{}') {
            this.redirect =
              this.redirect + '&' + qs.stringify(data, { indices: false })
          }
        }
      },
      immediate: true
    }
  },
  created() {
    // 获取验证码
    this.getCode()
    // 获取用户名密码等Cookie
    this.getCookie()
    // token 过期提示
    this.point()
  },
  methods: {
    getCode() {
      getCodeImg().then((res) => {
        this.codeUrl = res.img
        this.loginForm.uuid = res.uuid
      })
    },
    getCookie() {
      const username = Cookies.get('username')
      let password = Cookies.get('password')
      const rememberMe = Cookies.get('rememberMe')
      // 保存cookie里面的加密后的密码
      this.cookiePass = password === undefined ? '' : password
      password = password === undefined ? this.loginForm.password : password
      this.loginForm = {
        username: username === undefined ? this.loginForm.username : username,
        password: password,
        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe),
        code: ''
      }
    },
    handleLogin() {
      this.$refs.loginForm.validate((valid) => {
        const user = {
          username: this.loginForm.username,
          password: this.loginForm.password,
          rememberMe: this.loginForm.rememberMe,
          code: this.loginForm.code,
          uuid: this.loginForm.uuid
        }
        if (user.password !== this.cookiePass) {
          user.password = encrypt(user.password)
        }
        if (valid) {
          this.loading = true
          if (user.rememberMe) {
            Cookies.set('username', user.username, {
              expires: Config.passCookieExpires
            })
            Cookies.set('password', user.password, {
              expires: Config.passCookieExpires
            })
            Cookies.set('rememberMe', user.rememberMe, {
              expires: Config.passCookieExpires
            })
          } else {
            Cookies.remove('username')
            Cookies.remove('password')
            Cookies.remove('rememberMe')
          }
          this.$store.dispatch('user/Login', user).then(() => {
            this.loading = false
            this.$router.push({ path: this.redirect || '/' })
          }).catch(() => {
            this.loading = false
            this.getCode()
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    point() {
      const point = Cookies.get('point') !== undefined
      if (point) {
        this.$notify({
          title: '提示',
          message: '当前登录状态已过期，请重新登录！',
          type: 'warning',
          duration: 5000
        })
        Cookies.remove('point')
      }
    }
  }
}
</script>

<style rel="stylesheet/scss" lang="scss" scoped>
.login {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  background-size: cover;
}
.title {
  position: fixed;
  top: 8vh;
  font-size: 75px;
  -webkit-text-stroke: 2px #FFFFFF;
  background: linear-gradient(87deg, #3983F2 0%, #2A5FE5 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  letter-spacing: 3px;
  font-family: AlibabaPuHuiTi;
  width: 830px;
  text-align: center;
}

.login-form {
  border-radius: 10px;
  background: #ffffff;
  padding: 45px 45px 30px;
  width: 380px;
  margin-top: 16vh;
  ::v-deep .el-form-item{
    margin-bottom: 25px;
  }
  ::v-deep .el-input {
    height: 50px;
    input {
      height: 50px;
      line-height: 50px;
      font-size: 16px;
    }
  }
  .input-icon{
    height: 50px;
  }

  ::v-deep .el-checkbox__inner{
    width: 16px;
    height: 16px;
  }
  ::v-deep .el-checkbox__label{
    color: #37485D;
    font-size: 16px;
  }
  .login-btn{
    border-radius: 28px;
    height: 56px;
    font-size: 20px;
  }
}

.login-code {
  width: 37%;
  display: inline-block;
  text-align: center;
  height: 38px;
  img {
    cursor: pointer;
    vertical-align: middle;
  }
}

.el-login-footer {
  position: fixed;
  bottom: 20px;
  width: 100%;
  text-align: center;
  color: #fff;
  font-size: 20px;
  letter-spacing: 1px;
}

@media (max-width:1366px) {
  .title{
    top: 6vh;
    font-size: 66px;
  }

  .login-form{
    padding: 30px 40px 10px;
    width: 450px;
    ::v-deep .el-form-item{
      margin-bottom: 22px;
      .el-form-item__label{
        font-size: 18px;
      }
    }
    ::v-deep .el-input{
      height: 40px;
      input{
        font-size: 14px;
        line-height: 40px;
        height: 40px;
      }
    }
    .login-btn{
      height: 40px;
      font-size: 16px;
    }
    ::v-deep .el-checkbox__inner{
      width: 14px;
      height: 14px;
    }
    ::v-deep .el-checkbox__label{
      font-size: 14px;
    }
  }
}
</style>
