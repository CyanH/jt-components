<template>
  <div class="page container-component">
    <div class="container-full">
      <div class="container-full__body">
        <div ref="body" class="container-content">
          <div class="icons-container">
            <el-tabs type="border-card">
              <el-tab-pane label="Icons">
                <div class="grid">
                  <div v-for="item of svgIcons" :key="item" @click="handleClipboard(generateIconCode(item),$event)">
                    <el-tooltip placement="top">
                      <div slot="content">
                        {{ generateIconCode(item) }}
                      </div>
                      <div class="icon-item">
                        <icon-svg :name="item" class-name="disabled" />
                        <span>{{ item }}</span>
                      </div>
                    </el-tooltip>
                  </div>
                </div>
              </el-tab-pane>
              <el-tab-pane label="Element-UI Icons">
                <div class="grid">
                  <div v-for="item of elementIcons" :key="item" @click="handleClipboard(generateElementIconCode(item),$event)">
                    <el-tooltip placement="top">
                      <div slot="content">
                        {{ generateElementIconCode(item) }}
                      </div>
                      <div class="icon-item">
                        <i :class="'el-icon-' + item" />
                        <span>{{ item }}</span>
                      </div>
                    </el-tooltip>
                  </div>
                </div>
              </el-tab-pane>
            </el-tabs>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import clipboard from '@/utils/clipboard'
import svgIcons from './svg-icons'
import elementIcons from './element-icons'
export default {
  name: 'Icons',
  data() {
    return {
      svgIcons,
      elementIcons
    }
  },
  methods: {
    generateIconCode(symbol) {
      return `<icon-svg name="${symbol}" />`
    },
    generateElementIconCode(symbol) {
      return `<i class="el-icon-${symbol}" />`
    },
    handleClipboard(text, event) {
      clipboard(text, event)
    }
  }
}
</script>

<style lang="scss" scoped>
.icons-container {
  height: 100%;

  .grid {
    position: relative;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  }
  .icon-item {
    margin: 20px;
    height: 85px;
    text-align: center;
    width: 100px;
    float: left;
    font-size: 30px;
    color: #24292e;
    cursor: pointer;
  }
  span {
    display: block;
    font-size: 16px;
    margin-top: 10px;
  }
  .disabled {
    pointer-events: none;
  }

  ::v-deep .el-tabs{
    height: 100%;
    margin-bottom: 0;

    .el-tabs__content{
      height: calc(100% - 69px);
      overflow-y: auto;
    }
  }
}
</style>
